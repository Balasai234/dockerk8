apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: roboshop-ebs
provisioner: kubernetes.io/aws-ebs # or another provisioner (e.g. pd.csi.storage.gke.io, kubernetes.io/gce-pd)
reclaimPolicy: Retain
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: roboshop-dynamic-claim
  labels:
    project: roboshop
    env: production
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: "roboshop-ebs"
---
apiVersion: v1
kind: Service
metadata:
  name: statefulset-service
  labels:
    app: statefulset-app
    project: roboshop
spec:
  type: LoadBalancer
  selector:
    app: statefulset-app
    project: roboshop
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: v1
kind: HeadlessService
metadata:
  name: statefulset-headless
  labels:
    app: statefulset-app
    project: roboshop
spec:
  clusterIP: None
  selector:
    app: statefulset-app
    project: roboshop
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: statefulset-demo
  labels:
    app: statefulset-app
    project: roboshop
spec:
  serviceName: "statefulset-headless"
  replicas: 3
  selector:
    matchLabels:
      app: statefulset-app
      project: roboshop
  template:
    metadata:
      labels:
        app: statefulset-app
        project: roboshop
    spec:
      containers:
        - name: nginx-container
          image: nginx
          ports:
            - containerPort: 80
              name: web
          volumeMounts:
            - name: statefulset-storage
              mountPath: /usr/share/nginx/html
      volumes:
        - name: statefulset-storage
          persistentVolumeClaim:
            claimName: roboshop-dynamic-claim
